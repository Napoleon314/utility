CMAKE_MINIMUM_REQUIRED(VERSION 3.2)
PROJECT(${CFG_PROJECT_NAME})

SET(MAKER_PATH ../../${CFG_DEPENDENT_PATH}/maker)

INCLUDE(${MAKER_PATH}/maker.cmake)


#FILE(GLOB TEST_VALUE LIST_DIRECTORIES true ${PROJECT_BINARY_DIR}"../../include/*")

#SUBDIRLIST(SUBDIRS ${INCLUDE_PATH})



#FOREACH(_DIR ${SUBDIRS})
#	MESSAGE(STATUS ${_DIR})
#ENDFOREACH()

#SET(INCLUDE_EXP ../../${CFG_INCLUDE_PATH}/*)
#SET(SOURCE_EXP ../../${CFG_SOURCE_PATH}/*)

#FILE(GLOB_RECURSE INCLUDE_LIST ${PROJECT_BINARY_DIR} ${INCLUDE_EXP})
#FILE(GLOB_RECURSE SOURCE_LIST ${PROJECT_BINARY_DIR} ${SOURCE_EXP})

#SUBDIRLIST(SUBLIST ${INCLUDE_PATH})
#SUBDIRLIST(SRC_SUBLIST ${SOURCE_PATH})
#LIST(APPEND INCLUDE_SUBLIST ${SRC_SUBLIST})
#LIST(REMOVE_DUPLICATES INCLUDE_SUBLIST)


LIST(APPEND LIB_FILE_PATHS ${INCLUDE_PATH})
LIST(APPEND LIB_FILE_PATHS ${SOURCE_PATH})

SEARCH_LIB_FILES(LIB_FILE_LIST ${CFG_PROJECT_NAME} LIB_FILE_PATHS)


#MESSAGE(STATUS ${LIB_FILE_PATHS})

#FOREACH(ITER ${SUBLIST})
#	SOURCE_GROUP(${ITER} FILES ${VTD_INC})


#	MESSAGE(STATUS ${ITER})
#ENDFOREACH()

#MESSAGE(STATUS ${INCLUDE_SUBLIST})

ADD_LIBRARY(${CFG_PROJECT_NAME}_static STATIC ${LIB_FILE_LIST})
ADD_LIBRARY(${CFG_PROJECT_NAME}_dynamic SHARED ${LIB_FILE_LIST})